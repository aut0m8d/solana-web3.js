{"version":3,"file":"index.iife.min.js","sources":["../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/edwards.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/ed25519.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../../../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../../../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../../../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../../../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../../../node_modules/.pnpm/@solana+buffer-layout@4.0.1/node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/timing.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../../../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../../../node_modules/.pnpm/superstruct@0.14.2/node_modules/superstruct/lib/index.es.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/generateRequest.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.23.4/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../src/rpc-websocket.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/secp256k1.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'node:buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'node:buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'node:buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'node:buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.splice(0, accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.splice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'node:buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/** @internal */\ntype MessageSignednessErrors = {\n  invalid?: PublicKey[];\n  missing?: PublicKey[];\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures: boolean = true): boolean {\n    const signatureErrors = this._getMessageSignednessErrors(\n      this.serializeMessage(),\n      requireAllSignatures,\n    );\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(\n    message: Uint8Array,\n    requireAllSignatures: boolean,\n  ): MessageSignednessErrors | undefined {\n    const errors: MessageSignednessErrors = {};\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(\n        signData,\n        requireAllSignatures,\n      );\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${\n            sigErrors.invalid.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${\n            sigErrors.missing.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'node:buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'node:buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'node:buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'node:buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state for */\n  accounts?: {\n    /** The encoding of the returned account's data */\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'node:buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeStateV2::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(\n    params: SplitStakeParams,\n    // Compute the cost of allocating the new stake account in lamports\n    rentExemptReserve: number,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: rentExemptReserve,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(\n    params: SplitStakeWithSeedParams,\n    // If this stake account is new, compute the cost of allocating it in lamports\n    rentExemptReserve?: number,\n  ): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(\n        SystemProgram.transfer({\n          fromPubkey: params.authorizedPubkey,\n          toPubkey: splitStakePubkey,\n          lamports: rentExemptReserve,\n        }),\n      );\n    }\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\nexport type UpdateValidatorIdentityParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  nodePubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'InitializeAccount'\n  | 'Withdraw'\n  | 'UpdateValidatorIdentity';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n  UpdateValidatorIdentity: IInstructionInputData;\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct<\n      VoteInstructionInputData['UpdateValidatorIdentity']\n    >([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3762;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insufficient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(\n    params: UpdateValidatorIdentityParams,\n  ): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, nodePubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'node:buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const isSigner = byteArray.splice(0, 1)[0] === 1;\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'node:buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'node:buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["number","n","Number","isSafeInteger","Error","bytes","b","lengths","Uint8Array","length","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","crypto","globalThis","undefined","u8a","a","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","isLE","Uint32Array","utf8ToBytes","str","TextEncoder","encode","toBytes","data","concatBytes","arrays","r","reduce","sum","pad","forEach","set","Hash$1","Hash","clone","this","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","randomBytes","bytesLength","getRandomValues","setBigUint64","view","value","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","SHA2","constructor","padOffset","super","pos","len","take","Math","dataView","process","subarray","roundClean","digestInto","fill","i","oview","outLen","state","get","res","slice","destroy","to","U32_MASK64","fromBig","le","split","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$2","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","hexes","Array","from","_","toString","padStart","bytesToHex","hex","numberToHexUnpadded","num","hexToNumber","hexToBytes","array","j","hexByte","byte","parseInt","isNaN","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","e","equalBytes","b1","b2","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","push","genUntil","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isArray","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","Object","entries","_3n","_4n","_5n","_8n","mod","result","pow","power","modulo","pow2","x","invert","u","q","m","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","mul","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","n2","nv","sub","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","FpPow","f","p","d","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","c","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","wNAF","bits","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","max","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","y","static","toInv","fromAffine","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","equals","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","error","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Fp$1","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","message","toBuffer","Buffer","isBuffer","module","exports","assert","inherits","ctor","superCtor","super_","TempCtor","prototype","BN","endian","isBN","negative","words","red","_init","wordSize","require$$0","cmp","init","_initNumber","_initArray","replace","start","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","charCodeAt","parseHexByte","lowerBound","parseLength","parseBase","end","limbLen","limbPow","total","imuln","_iaddn","copy","dest","move","src","_move","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toArrayLike","allocate","ArrayType","allocUnsafe","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","lo","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","_tmp","ireduce","rlen","imulK","input","K256","call","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","code","getLens","b64","validLen","indexOf","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","write","rt","floor","log","LN2","base64","require$$1","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","proto","foo","setPrototypeOf","defineProperty","enumerable","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","alloc","encoding","checked","allocUnsafeSlow","isEncoding","actual","fromArrayLike","arrayView","obj","numberIsNaN","_isBuffer","compare","toLowerCase","concat","list","mustMatch","arguments","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","apply","toLocaleString","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","_arr","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","hexSliceLookupTable","newBuf","checkOffset","ext","readUintLE","readUIntLE","noAssert","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","sym","getMessage","Base","NodeError","writable","configurable","stack","range","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","isBytes","u32","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct$1","Struct","properties","assign","SOLANA_SCHEMA","Enum","enum","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","toBase58","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddressSync","pubkeyData","pubkey","_class","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","JSON","stringify","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","every","pair","serializeMessage","async","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","config","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","bigIntLayout","SystemInstruction","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","params","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","round","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","shiftIterator","done","toFailure","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetch","_interopRequireDefault","_typeof","_regeneratorRuntime","asyncIterator","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","stop","rval","handle","complete","finish","catch","_catch","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","reject","_next","_throw","info","_asyncToGenerator","_classCallCheck","Constructor","_toPrimitive","prim","_toPropertyKey","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_regenerator","_asyncToGenerator2","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","_login","_callee","resp","_callee$","_context","login","_x","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","baseSchema","withContext","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","lockedWritableAccounts","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","fromPrivateKey","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","sg","_sig","fromDER","derError","fromCompact","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","ecdsaSign","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","_class2","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","rentExemptReserve","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,30,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,103,104,105,106,107,108,109]}